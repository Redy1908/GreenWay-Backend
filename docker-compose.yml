version: '3.1'
services:

  # --------
  green-way-backend:
    image: redy1908/green-way-backend:v1
    ports:
      - "8080:8080"
    networks:
      - greenway
    depends_on:
      - postgis
      - keycloak
      - keycloak-db
      - green-way-osrm-standard
      - green-way-osrm-elevation
      - green-way-opentopodata

  # --------
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.7
    command: start-dev --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak-db
      KC_DB_URL_DATABASE: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_USERNAME: postgres
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./KeyCloak:/opt/keycloak/data/import
    ports:
      - "8090:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - greenway

  # --------
  keycloak-db:
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    healthcheck:
      test: "exit 0"
    ports:
      - "5432:5432"
    networks:
      - greenway
    volumes:
      - keycloak_data:/var/lib/postgresql/keycloak/data

  # --------
  postgis:
    image: postgis/postgis
    environment:
      POSTGRES_PASSWORD: postgis
      POSTGRES_DB: postgis
      POSTGRES_USER: postgis
    healthcheck:
      test: "exit 0"
    ports:
      - "5433:5432"
    networks:
      - greenway
    volumes:
      - postgis_data:/var/lib/postgresql/postgis/data

  # --------
  green-way-osrm-standard:
    image: ghcr.io/project-osrm/osrm-backend:v5.27.1
    volumes:
      - ./osrm/data-standard:/data-standard
      - ./osrm/profiles/car-standard.lua:/opt/car-standard.lua
    command: >
      /bin/bash -c "
       if [ $(ls -1 /data-standard | wc -l) -eq 2 ]; then
          osrm-extract -p /opt/car-standard.lua /data-standard/green-way.osm.pbf &&
          osrm-partition /data-standard/green-way.osrm &&
          osrm-customize /data-standard/green-way.osrm &&
          osrm-routed --algorithm mld /data-standard/green-way.osrm
        else
          osrm-routed --algorithm mld /data-standard/green-way.osrm
        fi
      "
    ports:
      - "5000:5000"
    networks:
      - greenway

  # --------
  green-way-osrm-elevation:
    image: ghcr.io/project-osrm/osrm-backend:v5.27.1
    volumes:
      - ./osrm/data-elevation:/data-elevation
      - ./osrm/profiles/car-elevation.lua:/opt/car-elevation.lua
    environment:
      - OSRM_FILE=sud-latest
      - OSRM_RASTER_SOURCE=../data-elevation/green-way.asc
      - LON_MIN=10 # <- CHANGE
      - LON_MAX=15 # <- CHANGE
      - LAT_MIN=40 # <- CHANGE
      - LAT_MAX=45 # <- CHANGE
      - NROWS=6000 # <- CHANGE
      - NCOLS=6000 # <- CHANGE
    command: >
      /bin/bash -c "
       if [ $(ls -1 /data-elevation | wc -l) -eq 2 ]; then
          osrm-extract -p /opt/car-elevation.lua /data-elevation/green-way.osm.pbf &&
          osrm-partition /data-elevation/green-way.osrm &&
          osrm-customize /data-elevation/green-way.osrm &&
          osrm-routed --algorithm mld /data-elevation/green-way.osrm
        else
          osrm-routed --algorithm mld /data-elevation/green-way.osrm
        fi
      "
    ports:
      - "5001:5000"
    networks:
      - greenway

  # --------
  green-way-opentopodata:
    image: redy1908/green-way-opentopodata:v1
    ports:
      - "5002:5000"
    command: sh -c "/usr/bin/supervisord -c /app/docker/supervisord.conf"
    volumes:
      - "./opentopodata/data:/app/data:ro"
      - "./opentopodata/config.yaml:/app/config.yaml"
    environment:
      - N_UWSGI_THREADS=4
    networks:
      - greenway
volumes:
  postgis_data:
  keycloak_data:
networks:
  greenway:
    driver: bridge
